networks:
  loki:

volumes:
  grafana:
  minio:
  loki:

services:
  # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
  # Loki would not have permissions to create the directories.
  # Therefore the init container changes permissions of the mounted directory.
  init:
    image: &lokiImage grafana/loki:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - loki:/loki
    networks:
      - loki

  grafana:
    image: grafana/grafana:11.4.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    networks:
      - loki

  minio:
    image: minio/minio
    container_name: minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        minio server --address "0.0.0.0:9000" --console-address "0.0.0.0:9001" /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      # - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
    networks:
      - loki

  loki-gateway:
    image: nginx:latest
    container_name: loki-gateway
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "9200:80"
    networks:
      - loki

  loki:
    image: *lokiImage
    container_name: loki
    volumes:
      - ./config:/etc/loki/
    # ports:
    #   - "3100"
    command: "-config.file=/etc/loki/loki.yaml"
    networks:
      - loki
    restart: always
    deploy:
      mode: replicated
      replicas: 1